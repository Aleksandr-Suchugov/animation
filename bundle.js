(()=>{var t={9662:(t,n,e)=>{var r=e(614),o=e(6330),i=TypeError;t.exports=function(t){if(r(t))return t;throw i(o(t)+" is not a function")}},9670:(t,n,e)=>{var r=e(111),o=String,i=TypeError;t.exports=function(t){if(r(t))return t;throw i(o(t)+" is not an object")}},1318:(t,n,e)=>{var r=e(5656),o=e(1400),i=e(6244),a=function(t){return function(n,e,a){var s,c=r(n),u=i(c),l=o(a,u);if(t&&e!=e){for(;u>l;)if((s=c[l++])!=s)return!0}else for(;u>l;l++)if((t||l in c)&&c[l]===e)return t||l||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},4326:(t,n,e)=>{var r=e(84),o=r({}.toString),i=r("".slice);t.exports=function(t){return i(o(t),8,-1)}},9920:(t,n,e)=>{var r=e(2597),o=e(3887),i=e(1236),a=e(3070);t.exports=function(t,n,e){for(var s=o(n),c=a.f,u=i.f,l=0;l<s.length;l++){var A=s[l];r(t,A)||e&&r(e,A)||c(t,A,u(n,A))}}},8880:(t,n,e)=>{var r=e(9781),o=e(3070),i=e(9114);t.exports=r?function(t,n,e){return o.f(t,n,i(1,e))}:function(t,n,e){return t[n]=e,t}},9114:t=>{t.exports=function(t,n){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:n}}},8052:(t,n,e)=>{var r=e(614),o=e(3070),i=e(6339),a=e(3072);t.exports=function(t,n,e,s){s||(s={});var c=s.enumerable,u=void 0!==s.name?s.name:n;if(r(e)&&i(e,u,s),s.global)c?t[n]=e:a(n,e);else{try{s.unsafe?t[n]&&(c=!0):delete t[n]}catch(t){}c?t[n]=e:o.f(t,n,{value:e,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return t}},3072:(t,n,e)=>{var r=e(7854),o=Object.defineProperty;t.exports=function(t,n){try{o(r,t,{value:n,configurable:!0,writable:!0})}catch(e){r[t]=n}return n}},9781:(t,n,e)=>{var r=e(7293);t.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:t=>{var n="object"==typeof document&&document.all,e=void 0===n&&void 0!==n;t.exports={all:n,IS_HTMLDDA:e}},317:(t,n,e)=>{var r=e(7854),o=e(111),i=r.document,a=o(i)&&o(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},8113:(t,n,e)=>{var r=e(5005);t.exports=r("navigator","userAgent")||""},7392:(t,n,e)=>{var r,o,i=e(7854),a=e(8113),s=i.process,c=i.Deno,u=s&&s.versions||c&&c.version,l=u&&u.v8;l&&(o=(r=l.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!o&&a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=+r[1]),t.exports=o},748:t=>{t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},2109:(t,n,e)=>{var r=e(7854),o=e(1236).f,i=e(8880),a=e(8052),s=e(3072),c=e(9920),u=e(4705);t.exports=function(t,n){var e,l,A,d,p,f=t.target,h=t.global,g=t.stat;if(e=h?r:g?r[f]||s(f,{}):(r[f]||{}).prototype)for(l in n){if(d=n[l],A=t.dontCallGetSet?(p=o(e,l))&&p.value:e[l],!u(h?l:f+(g?".":"#")+l,t.forced)&&void 0!==A){if(typeof d==typeof A)continue;c(d,A)}(t.sham||A&&A.sham)&&i(d,"sham",!0),a(e,l,d,t)}}},7293:t=>{t.exports=function(t){try{return!!t()}catch(t){return!0}}},4374:(t,n,e)=>{var r=e(7293);t.exports=!r((function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},6916:(t,n,e)=>{var r=e(4374),o=Function.prototype.call;t.exports=r?o.bind(o):function(){return o.apply(o,arguments)}},6530:(t,n,e)=>{var r=e(9781),o=e(2597),i=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,s=o(i,"name"),c=s&&"something"===function(){}.name,u=s&&(!r||r&&a(i,"name").configurable);t.exports={EXISTS:s,PROPER:c,CONFIGURABLE:u}},84:(t,n,e)=>{var r=e(4374),o=Function.prototype,i=o.call,a=r&&o.bind.bind(i,i);t.exports=function(t){return r?a(t):function(){return i.apply(t,arguments)}}},1702:(t,n,e)=>{var r=e(4326),o=e(84);t.exports=function(t){if("Function"===r(t))return o(t)}},5005:(t,n,e)=>{var r=e(7854),o=e(614),i=function(t){return o(t)?t:void 0};t.exports=function(t,n){return arguments.length<2?i(r[t]):r[t]&&r[t][n]}},8173:(t,n,e)=>{var r=e(9662),o=e(8554);t.exports=function(t,n){var e=t[n];return o(e)?void 0:r(e)}},7854:(t,n,e)=>{var r=function(t){return t&&t.Math==Math&&t};t.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof e.g&&e.g)||function(){return this}()||Function("return this")()},2597:(t,n,e)=>{var r=e(1702),o=e(7908),i=r({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,n){return i(o(t),n)}},3501:t=>{t.exports={}},4664:(t,n,e)=>{var r=e(9781),o=e(7293),i=e(317);t.exports=!r&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},8361:(t,n,e)=>{var r=e(1702),o=e(7293),i=e(4326),a=Object,s=r("".split);t.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(t){return"String"==i(t)?s(t,""):a(t)}:a},2788:(t,n,e)=>{var r=e(1702),o=e(614),i=e(5465),a=r(Function.toString);o(i.inspectSource)||(i.inspectSource=function(t){return a(t)}),t.exports=i.inspectSource},9909:(t,n,e)=>{var r,o,i,a=e(4811),s=e(7854),c=e(111),u=e(8880),l=e(2597),A=e(5465),d=e(6200),p=e(3501),f="Object already initialized",h=s.TypeError,g=s.WeakMap;if(a||A.state){var m=A.state||(A.state=new g);m.get=m.get,m.has=m.has,m.set=m.set,r=function(t,n){if(m.has(t))throw h(f);return n.facade=t,m.set(t,n),n},o=function(t){return m.get(t)||{}},i=function(t){return m.has(t)}}else{var v=d("state");p[v]=!0,r=function(t,n){if(l(t,v))throw h(f);return n.facade=t,u(t,v,n),n},o=function(t){return l(t,v)?t[v]:{}},i=function(t){return l(t,v)}}t.exports={set:r,get:o,has:i,enforce:function(t){return i(t)?o(t):r(t,{})},getterFor:function(t){return function(n){var e;if(!c(n)||(e=o(n)).type!==t)throw h("Incompatible receiver, "+t+" required");return e}}}},614:(t,n,e)=>{var r=e(4154),o=r.all;t.exports=r.IS_HTMLDDA?function(t){return"function"==typeof t||t===o}:function(t){return"function"==typeof t}},4705:(t,n,e)=>{var r=e(7293),o=e(614),i=/#|\.prototype\./,a=function(t,n){var e=c[s(t)];return e==l||e!=u&&(o(n)?r(n):!!n)},s=a.normalize=function(t){return String(t).replace(i,".").toLowerCase()},c=a.data={},u=a.NATIVE="N",l=a.POLYFILL="P";t.exports=a},8554:t=>{t.exports=function(t){return null==t}},111:(t,n,e)=>{var r=e(614),o=e(4154),i=o.all;t.exports=o.IS_HTMLDDA?function(t){return"object"==typeof t?null!==t:r(t)||t===i}:function(t){return"object"==typeof t?null!==t:r(t)}},1913:t=>{t.exports=!1},2190:(t,n,e)=>{var r=e(5005),o=e(614),i=e(7976),a=e(3307),s=Object;t.exports=a?function(t){return"symbol"==typeof t}:function(t){var n=r("Symbol");return o(n)&&i(n.prototype,s(t))}},6244:(t,n,e)=>{var r=e(7466);t.exports=function(t){return r(t.length)}},6339:(t,n,e)=>{var r=e(7293),o=e(614),i=e(2597),a=e(9781),s=e(6530).CONFIGURABLE,c=e(2788),u=e(9909),l=u.enforce,A=u.get,d=Object.defineProperty,p=a&&!r((function(){return 8!==d((function(){}),"length",{value:8}).length})),f=String(String).split("String"),h=t.exports=function(t,n,e){"Symbol("===String(n).slice(0,7)&&(n="["+String(n).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),e&&e.getter&&(n="get "+n),e&&e.setter&&(n="set "+n),(!i(t,"name")||s&&t.name!==n)&&(a?d(t,"name",{value:n,configurable:!0}):t.name=n),p&&e&&i(e,"arity")&&t.length!==e.arity&&d(t,"length",{value:e.arity});try{e&&i(e,"constructor")&&e.constructor?a&&d(t,"prototype",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(t){}var r=l(t);return i(r,"source")||(r.source=f.join("string"==typeof n?n:"")),t};Function.prototype.toString=h((function(){return o(this)&&A(this).source||c(this)}),"toString")},4758:t=>{var n=Math.ceil,e=Math.floor;t.exports=Math.trunc||function(t){var r=+t;return(r>0?e:n)(r)}},3070:(t,n,e)=>{var r=e(9781),o=e(4664),i=e(3353),a=e(9670),s=e(4948),c=TypeError,u=Object.defineProperty,l=Object.getOwnPropertyDescriptor;n.f=r?i?function(t,n,e){if(a(t),n=s(n),a(e),"function"==typeof t&&"prototype"===n&&"value"in e&&"writable"in e&&!e.writable){var r=l(t,n);r&&r.writable&&(t[n]=e.value,e={configurable:"configurable"in e?e.configurable:r.configurable,enumerable:"enumerable"in e?e.enumerable:r.enumerable,writable:!1})}return u(t,n,e)}:u:function(t,n,e){if(a(t),n=s(n),a(e),o)try{return u(t,n,e)}catch(t){}if("get"in e||"set"in e)throw c("Accessors not supported");return"value"in e&&(t[n]=e.value),t}},1236:(t,n,e)=>{var r=e(9781),o=e(6916),i=e(5296),a=e(9114),s=e(5656),c=e(4948),u=e(2597),l=e(4664),A=Object.getOwnPropertyDescriptor;n.f=r?A:function(t,n){if(t=s(t),n=c(n),l)try{return A(t,n)}catch(t){}if(u(t,n))return a(!o(i.f,t,n),t[n])}},8006:(t,n,e)=>{var r=e(6324),o=e(748).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(t){return r(t,o)}},5181:(t,n)=>{n.f=Object.getOwnPropertySymbols},7976:(t,n,e)=>{var r=e(1702);t.exports=r({}.isPrototypeOf)},6324:(t,n,e)=>{var r=e(1702),o=e(2597),i=e(5656),a=e(1318).indexOf,s=e(3501),c=r([].push);t.exports=function(t,n){var e,r=i(t),u=0,l=[];for(e in r)!o(s,e)&&o(r,e)&&c(l,e);for(;n.length>u;)o(r,e=n[u++])&&(~a(l,e)||c(l,e));return l}},5296:(t,n)=>{"use strict";var e={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,o=r&&!e.call({1:2},1);n.f=o?function(t){var n=r(this,t);return!!n&&n.enumerable}:e},2140:(t,n,e)=>{var r=e(6916),o=e(614),i=e(111),a=TypeError;t.exports=function(t,n){var e,s;if("string"===n&&o(e=t.toString)&&!i(s=r(e,t)))return s;if(o(e=t.valueOf)&&!i(s=r(e,t)))return s;if("string"!==n&&o(e=t.toString)&&!i(s=r(e,t)))return s;throw a("Can't convert object to primitive value")}},3887:(t,n,e)=>{var r=e(5005),o=e(1702),i=e(8006),a=e(5181),s=e(9670),c=o([].concat);t.exports=r("Reflect","ownKeys")||function(t){var n=i.f(s(t)),e=a.f;return e?c(n,e(t)):n}},4488:(t,n,e)=>{var r=e(8554),o=TypeError;t.exports=function(t){if(r(t))throw o("Can't call method on "+t);return t}},6200:(t,n,e)=>{var r=e(2309),o=e(9711),i=r("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},5465:(t,n,e)=>{var r=e(7854),o=e(3072),i="__core-js_shared__",a=r[i]||o(i,{});t.exports=a},2309:(t,n,e)=>{var r=e(1913),o=e(5465);(t.exports=function(t,n){return o[t]||(o[t]=void 0!==n?n:{})})("versions",[]).push({version:"3.25.5",mode:r?"pure":"global",copyright:"Â© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.25.5/LICENSE",source:"https://github.com/zloirock/core-js"})},6293:(t,n,e)=>{var r=e(7392),o=e(7293);t.exports=!!Object.getOwnPropertySymbols&&!o((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},1400:(t,n,e)=>{var r=e(9303),o=Math.max,i=Math.min;t.exports=function(t,n){var e=r(t);return e<0?o(e+n,0):i(e,n)}},5656:(t,n,e)=>{var r=e(8361),o=e(4488);t.exports=function(t){return r(o(t))}},9303:(t,n,e)=>{var r=e(4758);t.exports=function(t){var n=+t;return n!=n||0===n?0:r(n)}},7466:(t,n,e)=>{var r=e(9303),o=Math.min;t.exports=function(t){return t>0?o(r(t),9007199254740991):0}},7908:(t,n,e)=>{var r=e(4488),o=Object;t.exports=function(t){return o(r(t))}},7593:(t,n,e)=>{var r=e(6916),o=e(111),i=e(2190),a=e(8173),s=e(2140),c=e(5112),u=TypeError,l=c("toPrimitive");t.exports=function(t,n){if(!o(t)||i(t))return t;var e,c=a(t,l);if(c){if(void 0===n&&(n="default"),e=r(c,t,n),!o(e)||i(e))return e;throw u("Can't convert object to primitive value")}return void 0===n&&(n="number"),s(t,n)}},4948:(t,n,e)=>{var r=e(7593),o=e(2190);t.exports=function(t){var n=r(t,"string");return o(n)?n:n+""}},6330:t=>{var n=String;t.exports=function(t){try{return n(t)}catch(t){return"Object"}}},9711:(t,n,e)=>{var r=e(1702),o=0,i=Math.random(),a=r(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+a(++o+i,36)}},3307:(t,n,e)=>{var r=e(6293);t.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3353:(t,n,e)=>{var r=e(9781),o=e(7293);t.exports=r&&o((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},4811:(t,n,e)=>{var r=e(7854),o=e(614),i=r.WeakMap;t.exports=o(i)&&/native code/.test(String(i))},5112:(t,n,e)=>{var r=e(7854),o=e(2309),i=e(2597),a=e(9711),s=e(6293),c=e(3307),u=o("wks"),l=r.Symbol,A=l&&l.for,d=c?l:l&&l.withoutSetter||a;t.exports=function(t){if(!i(u,t)||!s&&"string"!=typeof u[t]){var n="Symbol."+t;s&&i(l,t)?u[t]=l[t]:u[t]=c&&A?A(n):d(n)}return u[t]}},9070:(t,n,e)=>{var r=e(2109),o=e(9781),i=e(3070).f;r({target:"Object",stat:!0,forced:Object.defineProperty!==i,sham:!o},{defineProperty:i})},1402:(t,n,e)=>{"use strict";e.d(n,{Z:()=>s});var r=e(7537),o=e.n(r),i=e(3645),a=e.n(i)()(o());a.push([t.id,"* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  height: 100%;\n  width: 100%;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\nspan {\n  line-height: 0;\n}\n\n/* Collapsible */\n\n.widget_collapsible, .widget_chat {\n  width: 30%;\n  margin: 1rem auto;\n  padding: 1rem;\n  border: 1px dashed rgb(116, 113, 126);\n  border-radius: 10px;\n  box-sizing: border-box;\n  background-color: #fff;\n}\n\n.widget_controls {\n  margin-bottom: 0.5rem;\n}\n\n.widget_button {\n  padding: 1rem;\n  border: 2px solid deepskyblue;\n  border-radius: 10px;\n  box-sizing: border-box;\n  background-color: deepskyblue;\n  color: white;  \n  font-weight: bold;\n}\n\n.widget_button:hover {\n  cursor: pointer;\n  background-color: dodgerblue;\n} \n\n.widget_button:focus {\n  border: 2px solid aqua;  \n}\n\n.widget_footer {   \n  overflow: hidden;\n}\n\n.widget_footer_string {\n  padding: 1rem;\n  line-height: 2rem;\n  border: 1px solid lightgrey;   \n}\n\n.show { \n  opacity: 1;\n  max-height: 30vh;\n  transition: opacity 0.25s 0.25s, max-height 0.5s steps(5, end);\n}\n\n.collapsed {\n  opacity: 0;\n  max-height: 0px; \n  transition: opacity 0.25s 0.25s, max-height 0.5s steps(5, end);   \n}\n\n/* Chat */\n\n.widget_chat_container {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  width: 30%;\n}\n\n.widget_round_button {\n  background-color: red;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  position: absolute;\n  right: 10px;\n  bottom: 10px;\n  cursor: pointer;\n  opacity: 1;\n  transform-origin: center;\n  transform: scale(1);\n  transition: width 100ms linear, height 100ms linear, opacity 100ms linear, transform 100ms linear;\n}\n\n.widget_round_button:hover {\n  transform-origin: center;\n  transform: scale(1.2);\n  transition: transform 100ms linear;\n}\n\n.widget_chat {\n  width: 100%;\n  position: absolute;\n  right: 10px;\n  bottom: 10px; \n  margin: 1rem;\n  opacity: 1;\n  transform-origin: 100% bottom;\n  transform: scale(1);\n  transition: opacity 100ms linear, transform 100ms linear;\n}\n\n.widget_chat_remove {\n  margin-right: 0;\n  margin-left: auto;\n  width: 2rem;\n  text-align: center;\n  font-size: 1rem;\n  font-weight: bold;\n}\n\n.widget_chat_remove:hover {\n  cursor: pointer;\n}\n\n.widget_chat_button, .widget_chat_input {\n  width: 100%;\n  margin-top: 1rem;\n  border-radius: 10px;\n}\n\n.widget_chat_input {\n  resize: vertical;\n  min-height: 10rem;\n}\n\n.widget_chat.hide {\n  transform-origin: 100% bottom;\n  transform: scale(0);\n  opacity: 0;\n  transition: all 100ms linear;\n}\n\n.widget_round_button.hide {\n  transform: scale(0);\n  opacity: 0;\n  transition: all 100ms linear;\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,yCAAyC;AAC3C;;AAEA;EACE,cAAc;AAChB;;AAEA,gBAAgB;;AAEhB;EACE,UAAU;EACV,iBAAiB;EACjB,aAAa;EACb,qCAAqC;EACrC,mBAAmB;EACnB,sBAAsB;EACtB,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;EACnB,sBAAsB;EACtB,6BAA6B;EAC7B,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,4BAA4B;AAC9B;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,2BAA2B;AAC7B;;AAEA;EACE,UAAU;EACV,gBAAgB;EAChB,8DAA8D;AAChE;;AAEA;EACE,UAAU;EACV,eAAe;EACf,8DAA8D;AAChE;;AAEA,SAAS;;AAET;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,UAAU;EACV,wBAAwB;EACxB,mBAAmB;EACnB,iGAAiG;AACnG;;AAEA;EACE,wBAAwB;EACxB,qBAAqB;EACrB,kCAAkC;AACpC;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,UAAU;EACV,6BAA6B;EAC7B,mBAAmB;EACnB,wDAAwD;AAC1D;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,WAAW;EACX,kBAAkB;EAClB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,6BAA6B;EAC7B,mBAAmB;EACnB,UAAU;EACV,4BAA4B;AAC9B;;AAEA;EACE,mBAAmB;EACnB,UAAU;EACV,4BAA4B;AAC9B",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  height: 100%;\n  width: 100%;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\nspan {\n  line-height: 0;\n}\n\n/* Collapsible */\n\n.widget_collapsible, .widget_chat {\n  width: 30%;\n  margin: 1rem auto;\n  padding: 1rem;\n  border: 1px dashed rgb(116, 113, 126);\n  border-radius: 10px;\n  box-sizing: border-box;\n  background-color: #fff;\n}\n\n.widget_controls {\n  margin-bottom: 0.5rem;\n}\n\n.widget_button {\n  padding: 1rem;\n  border: 2px solid deepskyblue;\n  border-radius: 10px;\n  box-sizing: border-box;\n  background-color: deepskyblue;\n  color: white;  \n  font-weight: bold;\n}\n\n.widget_button:hover {\n  cursor: pointer;\n  background-color: dodgerblue;\n} \n\n.widget_button:focus {\n  border: 2px solid aqua;  \n}\n\n.widget_footer {   \n  overflow: hidden;\n}\n\n.widget_footer_string {\n  padding: 1rem;\n  line-height: 2rem;\n  border: 1px solid lightgrey;   \n}\n\n.show { \n  opacity: 1;\n  max-height: 30vh;\n  transition: opacity 0.25s 0.25s, max-height 0.5s steps(5, end);\n}\n\n.collapsed {\n  opacity: 0;\n  max-height: 0px; \n  transition: opacity 0.25s 0.25s, max-height 0.5s steps(5, end);   \n}\n\n/* Chat */\n\n.widget_chat_container {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  width: 30%;\n}\n\n.widget_round_button {\n  background-color: red;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  position: absolute;\n  right: 10px;\n  bottom: 10px;\n  cursor: pointer;\n  opacity: 1;\n  transform-origin: center;\n  transform: scale(1);\n  transition: width 100ms linear, height 100ms linear, opacity 100ms linear, transform 100ms linear;\n}\n\n.widget_round_button:hover {\n  transform-origin: center;\n  transform: scale(1.2);\n  transition: transform 100ms linear;\n}\n\n.widget_chat {\n  width: 100%;\n  position: absolute;\n  right: 10px;\n  bottom: 10px; \n  margin: 1rem;\n  opacity: 1;\n  transform-origin: 100% bottom;\n  transform: scale(1);\n  transition: opacity 100ms linear, transform 100ms linear;\n}\n\n.widget_chat_remove {\n  margin-right: 0;\n  margin-left: auto;\n  width: 2rem;\n  text-align: center;\n  font-size: 1rem;\n  font-weight: bold;\n}\n\n.widget_chat_remove:hover {\n  cursor: pointer;\n}\n\n.widget_chat_button, .widget_chat_input {\n  width: 100%;\n  margin-top: 1rem;\n  border-radius: 10px;\n}\n\n.widget_chat_input {\n  resize: vertical;\n  min-height: 10rem;\n}\n\n.widget_chat.hide {\n  transform-origin: 100% bottom;\n  transform: scale(0);\n  opacity: 0;\n  transition: all 100ms linear;\n}\n\n.widget_round_button.hide {\n  transform: scale(0);\n  opacity: 0;\n  transition: all 100ms linear;\n}"],sourceRoot:""}]);const s=a},3645:t=>{"use strict";t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",r=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),r&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),r&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,r,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var u=0;u<t.length;u++){var l=[].concat(t[u]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},7537:t=>{"use strict";t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=e.sources.map((function(t){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(t," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},3379:t=>{"use strict";var n=[];function e(t){for(var e=-1,r=0;r<n.length;r++)if(n[r].identifier===t){e=r;break}return e}function r(t,r){for(var i={},a=[],s=0;s<t.length;s++){var c=t[s],u=r.base?c[0]+r.base:c[0],l=i[u]||0,A="".concat(u," ").concat(l);i[u]=l+1;var d=e(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var f=o(p,r);r.byIndex=s,n.splice(s,0,{identifier:A,updater:f,references:1})}a.push(A)}return a}function o(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,o){var i=r(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=e(i[a]);n[s].references--}for(var c=r(t,o),u=0;u<i.length;u++){var l=e(i[u]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=c}}},569:t=>{"use strict";var n={};t.exports=function(t,e){var r=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},9216:t=>{"use strict";t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},3565:(t,n,e)=>{"use strict";t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},7795:t=>{"use strict";t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},4589:t=>{"use strict";t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return t[r](i,i.exports,e),i.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0,(()=>{"use strict";function t(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}e(9070);var n=function(){function n(){!function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),this.container=document.querySelector(".main_container")}var e,r;return e=n,(r=[{key:"init",value:function(){if(this.container){this.container.insertAdjacentHTML("beforeEnd",'\n    <div class="widget widget_collapsible">       \n      <div class="widget_controls"> \n        <button class="widget_button">See more</button> \n      </div>\n      <div class="widget_footer collapsed">         \n        <div class="widget_footer_string">\n        ÐÐ¾Ð´Ð¾Ð±Ð½ÑÐ¹ Ð²Ð¸Ð´Ð¶ÐµÑ ÐµÑÑÑ Ð² ÑÐ°Ð¼ÐºÐ°Ñ Bootstrap, Ð½Ð¾ ÐºÐ°Ðº Ð¼Ñ Ñ Ð²Ð°Ð¼Ð¸ "Ð·Ð½Ð°ÐµÐ¼": "jQuery Ð½Ðµ Ð½ÑÐ¶ÐµÐ½", Ð¿Ð¾ÑÑÐ¾Ð¼Ñ Ð²Ð°Ð¼ Ð½ÑÐ¶Ð½Ð¾ ÑÐµÐ°Ð»Ð¸Ð·Ð¾Ð²Ð°ÑÑ ÑÐ°ÐºÐ¾Ð¹ Ð¶Ðµ Ð²Ð¸Ð´Ð¶ÐµÑ Ð½Ð° ÑÐ¸ÑÑÐ¾Ð¼ JS.\n        </div>\n      </div> \n    </div>');var t=document.querySelector(".widget_button");this.container.querySelector(".widget_collapsible").addEventListener("click",(function(n){if(n.target===t){t.textContent="Collapse"===t.textContent?"See more":"Collapse";var e=n.currentTarget.querySelector(".widget_footer");e.classList.toggle("collapsed"),e.classList.toggle("show")}}))}}}])&&t(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),n}();function r(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var o=function(){function t(){!function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this,t),this.container=document.querySelector(".main_container")}var n,e;return n=t,(e=[{key:"init",value:function(){var t=this;this.container&&(this.container.insertAdjacentHTML("beforeEnd",'\n    <div class="widget_chat_container">\n      <div class="widget_round_button">\n      </div>\n      <div class="widget widget_chat hide">\n        <div class="widget_chat_remove">\n          &times;\n        </div> \n        <h2>ÐÐ°Ð¿Ð¸ÑÐ¸ÑÐµ Ð½Ð°Ð¼</h2>\n        <form class="widget_chat_form">  \n          <textarea class="widget_chat_input"></textarea>           \n          <div class="widget_controls widget_chat_controls"> \n            <button class="widget_button widget_chat_button">ÐÑÐ¿ÑÐ°Ð²Ð¸ÑÑ</button> \n          </div>\n        </form>\n      </div>\n    </div>'),this.chatWidgetContainer=this.container.querySelector(".widget_chat_container"),this.chatWidgetButton=this.chatWidgetContainer.querySelector(".widget_round_button"),this.chatWidgetWindow=this.chatWidgetContainer.querySelector(".widget_chat"),this.chatWidgetWindowCloseBtn=this.chatWidgetWindow.querySelector(".widget_chat_remove"),this.chatWidgetButton.addEventListener("click",(function(n){n.target.classList.add("hide"),t.chatWidgetWindow.classList.remove("hide")})),this.chatWidgetWindow.addEventListener("submit",(function(n){n.preventDefault(),t.chatWidgetWindow.classList.add("hide"),t.chatWidgetButton.classList.remove("hide")})),this.chatWidgetWindowCloseBtn.addEventListener("click",(function(){t.chatWidgetWindow.classList.add("hide"),t.chatWidgetButton.classList.remove("hide")})))}}])&&r(n.prototype,e),Object.defineProperty(n,"prototype",{writable:!1}),t}(),i=e(3379),a=e.n(i),s=e(7795),c=e.n(s),u=e(569),l=e.n(u),A=e(3565),d=e.n(A),p=e(9216),f=e.n(p),h=e(4589),g=e.n(h),m=e(1402),v={};v.styleTagTransform=g(),v.setAttributes=d(),v.insert=l().bind(null,"head"),v.domAPI=c(),v.insertStyleElement=f(),a()(m.Z,v),m.Z&&m.Z.locals&&m.Z.locals;var b=new n,y=new o;document.addEventListener("DOMContentLoaded",(function(){b.init(),y.init()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,